<!-- calendar -->

<div class="calendar">
  <div class="calendar__opts">
    <select name="calendar__month" id="calendar__month">
      <option>1月</option>
      <option>2月</option>
      <option>3月</option>
      <option>4月</option>
      <option>5月</option>
      <option selected>6月</option>
      <option>7月</option>
      <option>8月</option>
      <option>9月</option>
      <option>10月</option>
      <option>11月</option>
      <option></option>
    </select>

    <select name="calendar__year" id="calendar__year">
      <option>2017</option>
      <option>2018</option>
      <option>2019</option>
      <option>2020</option>
      <option>2021</option>
      <option selected>2022</option>
      <option>2023</option>
      <option>2024</option>
    </select>
  </div>

  <div class="calendar__body">
    <div class="calendar__days">
      <div>月</div>
      <div>火</div>
      <div>水</div>
      <div>木</div>
      <div>金</div>
      <div>土</div>
      <div>日</div>
    </div>

    <div class="calendar__dates">
      <div class="calendar__date calendar__date--grey"><span>27</span></div>
      <div class="calendar__date calendar__date--grey"><span>28</span></div>
      <div class="calendar__date calendar__date--grey"><span>29</span></div>
      <div class="calendar__date calendar__date--grey"><span>30</span></div>
      <div class="calendar__date"><span>1</span></div>
      <div class="calendar__date"><span>2</span></div>
      <div class="calendar__date"><span>3</span></div>
      <div class="calendar__date"><span>4</span></div>
      <div class="calendar__date"><span>5</span></div>
      <div class="calendar__date"><span>6</span></div>
      <div class="calendar__date"><span>7</span></div>
      <div class="calendar__date"><span>8</span></div>
      <div class="calendar__date"><span>9</span></div>
      <div class="calendar__date calendar__date--selected"><span>10</span></div>
      <div class="calendar__date"><span>11</span></div>
      <div class="calendar__date"><span>12</span></div>
      <div class="calendar__date"><span>13</span></div>
      <div class="calendar__date"><span>14</span></div>
      <div class="calendar__date"><span>15</span></div>
      <div class="calendar__date"><span>16</span></div>
      <div class="calendar__date"><span>17</span></div>
      <div class="calendar__date"><span>18</span></div>
      <div class="calendar__date"><span>19</span></div>
      <div class="calendar__date"><span>20</span></div>
      <div class="calendar__date"><span>21</span></div>
      <div class="calendar__date"><span>22</span></div>
      <div class="calendar__date"><span>23</span></div>
      <div class="calendar__date"><span>24</span></div>
      <div class="calendar__date"><span>25</span></div>
      <div class="calendar__date"><span>26</span></div>
      <div class="calendar__date"><span>27</span></div>
      <div class="calendar__date"><span>28</span></div>
      <div class="calendar__date"><span>29</span></div>
      <div class="calendar__date"><span>30</span></div>
      <div class="calendar__date"><span>31</span></div>
    </div>
  </div>

  <div class="calendar__buttons">
    <button class="calendar__button calendar__button--grey">Back</button>

    <button class="calendar__button calendar__button--primary">Apply</button>
  </div>
</div>
<!-- calendar -->

<!-- training records -->
<h1>Training records</h1>
<canvas id="chart"></canvas>
<hr />

<script>
  //値をグラフに表示させる
  Chart.plugins.register({
      afterDatasetsDraw: function (chart, easing) {
          var ctx = chart.ctx;

          chart.data.datasets.forEach(function (dataset, i) {
              var meta = chart.getDatasetMeta(i);
              if (!meta.hidden) {
                  meta.data.forEach(function (element, index) {
                      // 値の表示
                      ctx.fillStyle = 'rgb(0, 0, 0,0.8)';//文字の色
                      var fontSize = 12;//フォントサイズ
                      var fontStyle = 'normal';//フォントスタイル
                      var fontFamily = 'Arial';//フォントファミリー
                      ctx.font = Chart.helpers.fontString(fontSize, fontStyle, fontFamily);

                      var dataString = dataset.data[index].toString();
          
                      // 値の位置
                      ctx.textAlign = 'center';//テキストを中央寄せ
                      ctx.textBaseline = 'middle';//テキストベースラインの位置を中央揃え

                      var padding = 5;//余白
                      var position = element.tooltipPosition();
                      ctx.fillText(dataString, position.x, position.y - (fontSize / 2) - padding);
    
                  });
              }
          });
      }
  });



  //=========== 折れ線グラフ（複数） ============//
  $('#chart02').on('inview', function(event, isInView) {//画面上に入ったらグラフを描画
  if (isInView) {

  var ctx=document.getElementById("chart02");//グラフを描画したい場所のid
  var chart=new Chart(ctx,{
  type:'line',//グラフのタイプ
  data:{//グラフのデータ
    labels:["1月","2月","3月","4月","5月","6月",],//データの名前
    datasets: [
          {
        label:"Aさん",//グラフのタイトル
        borderColor: "rgba(255,0,0,1)",//グラフの線の色
        backgroundColor:"rgba(255,0,0,0)",//グラフの背景色透過
        data:["60","55","54","50","49","47",]//横列に並ぶデータ
          },{
        label:"Bさん",//グラフのタイトル
        borderColor: "rgba(130,201,169,0.5)",//グラフの線の色
        backgroundColor:"rgba(130,201,169,0)",//グラフの背景色透過
        data:["90","85","74","60","59","50",]//横列に並ぶデータ
          },{
        label:"Cさん",//グラフのタイトル
        borderColor: "rgba(255,183,76,0.5)",//グラフの線の色
        backgroundColor:"rgba(255,183,76,0)",//グラフの背景色透過
        data:["78","75","70","67","60","45",]//横列に並ぶデータ
          }
        ]

  },
  options:{//グラフのオプション
    legend:{
      display: true//グラフの説明を表示
    },
  tooltips:{//グラフへカーソルを合わせた際のツールチップ詳細表示の設定
    callbacks:{
          label: function(tooltipItems, data) {
              if(tooltipItems.yLabel == "0"){
                  return "";
              }
              return data.datasets[tooltipItems.datasetIndex].label + "：" + tooltipItems.yLabel + "Kg";//Kgを最後につける
          }
      }
  
    },
    title:{//上部タイトル表示の設定
      display: true,
      fontSize:10,
      text: '単位：Kg'
    },
    scales:{
      yAxes:[//グラフ縦軸（Y軸）設定
        {
          ticks:{
            beginAtZero:true,//0からスタート
            suggestedMax: 100,//最大が100
            suggestedMin: 0,//最小が0
            stepSize: 10,//10づつ数値が刻まれる
            callback: function(value){
              return  value +  'Kg'//数字＋%で表示      
          }
        }
        }
      ],
      xAxes:[//棒グラフ横（X軸）設定
        {
          barPercentage:0.5,//バーの太さ
        }
      ]
    }
  }
  });
    
  }
  });
</script>

<!-- training records -->